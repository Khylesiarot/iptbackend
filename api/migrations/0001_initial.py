# Generated by Django 4.1.7 on 2023-05-13 03:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('adminId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='admin_groups', related_query_name='admin_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='admin_permissions', related_query_name='admin_permission', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('collegeId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.CharField(max_length=100, null=True)),
                ('college_adminID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('offerCode', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('course_number', models.CharField(max_length=1000)),
                ('desc_title', models.CharField(max_length=1000)),
                ('units', models.IntegerField()),
                ('college_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.college', to_field='title')),
                ('subject_adminID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('studentId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('degree_program', models.CharField(max_length=100)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('college', models.CharField(max_length=100)),
                ('year_lvl', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('groups', models.ManyToManyField(blank=True, related_name='student_groups', related_query_name='student_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='student_permissions', related_query_name='student_permission', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('date_enrolled', models.DateField(auto_now_add=True)),
                ('offer_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
        ),
        migrations.AddConstraint(
            model_name='college',
            constraint=models.UniqueConstraint(fields=('title',), name='unique_college_title'),
        ),
    ]
